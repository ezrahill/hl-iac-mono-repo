kube-prometheus-stack:
  grafana:
    enabled: false
    forceDeployDatasources: true
    forceDeployDashboards: true
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://loki.loki:3100
  prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    ruleSelector:
        matchExpressions:
          - key: prometheus
            operator: In
            values:
              - example-rules
  alertmanager:
    config:
      global:
        resolve_timeout: 5m
        slack_api_url: $(SLACK_API_URL)
      route:
        group_by:
          - namespace
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'slack'
        routes:
          - receiver: 'slack'
            matchers:
              - alertname: Watchdog
      receivers:
        - name: slack
          slack_configs:
            - channel: '#kubernetes-alerts'
              send_resolved: true
              title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
              text: >-
                {{ range .Alerts }}
                  *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
                  *Description:* {{ .Annotations.description }}
                  *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
                  *Details:*
                  {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                  {{ end }}
                {{ end }}
    ## Optionally specify extra environment variables to add to alertmanager container
    extraEnv:
      - name: SLACK_API_URL
        valueFrom:
          secretKeyRef:
            name: slack-webhook-secret
            key: slack_api_url